"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.groupBy = void 0;
const constants_1 = require("./constants");
const validation_1 = require("./validation");
function groupBy(
/**
 * A propriedade de referência dos objetos para agrupamento
 */
key, 
/**
 * A lista de objetos que será agrupada
 */
array, options) {
    (0, validation_1.validate)(key, array, options);
    Object.assign(constants_1.defaultOptions, options);
    const { type } = constants_1.defaultOptions;
    if (!(options === null || options === void 0 ? void 0 : options.compare)) {
        constants_1.defaultOptions.compare = constants_1.defaultCompare[type];
    }
    const groups = type === 'objectWithKeys' ? {} : [];
    const fn = constants_1.functions[type];
    if (!fn) {
        throw new Error(`O tipo de agrupamento '${type}' não existe!`);
    }
    array.forEach((item) => {
        if (!item[key]) {
            throw new Error(`A key '${key}' informada não existe`);
        }
        fn(groups, item, key, constants_1.defaultOptions);
    });
    return groups;
}
exports.groupBy = groupBy;
